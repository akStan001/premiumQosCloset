<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QOS Closet - Premium Men's Wear</title>
    <style>
        :root {
            --primary: #2c3e50;
            --secondary: #34495e;
            --accent: #e74c3c;
            --light: #ecf0f1;
            --dark: #2c3e50;
            --text: #333;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f5f5;
            color: var(--text);
            line-height: 1.6;
            padding-top: 130px;
        }

        /* Header Styles */
        header {
            background-color:#FFD700 ;
            color: white;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            box-shadow: var(--shadow);
            padding: 1rem 2rem;
            display: flex;
            flex-direction: column;
            transition: var(--transition);
        }

        .header-top {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: bold;
            color: white;
            text-decoration: none;
        }

        .logo span {
            color: var(--accent);
        }

        .cart-icon {
            position: relative;
            cursor: pointer;
            font-size: 1.5rem;
        }

        .cart-count {
            position: absolute;
            top: -10px;
            right: -10px;
            background-color: var(--accent);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
        }

        /* Category Navigation */
        .category-nav {
            display: flex;
            overflow-x: auto;
            padding: 10px 0;
            margin-top: 10px;
            gap: 8px;
            scrollbar-width: none; /* Firefox */
        }

        .category-nav::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Opera */
        }

        .category-btn {
            background-color: rgba(255, 255, 255, 0.2);
            color: black;
            border: none;
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
            white-space: nowrap;
            transition: var(--transition);
        }

        .category-btn:hover {
            background-color: rgba(255, 255, 255, 0.3);
        }

        .category-btn.active {
            background-color: var(--primary);
            color: white;
        }

        /* Cart Dropdown */
        .cart-dropdown {
            position: absolute;
            top: 100%;
            right: 0;
            background-color: white;
            width: 350px;
            max-height: 400px;
            overflow-y: auto;
            box-shadow: var(--shadow);
            border-radius: 5px;
            padding: 1rem;
            display: none;
            z-index: 1001;
        }

        .cart-dropdown.active {
            display: block;
        }

        .cart-item {
            display: flex;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #eee;
        }

        .cart-item-img {
            width: 60px;
            height: 60px;
            object-fit: cover;
            margin-right: 1rem;
            border-radius: 5px;
        }

        .cart-item-details {
            flex: 1;
        }

        .cart-item-title {
            font-weight: bold;
            margin-bottom: 0.3rem;
        }

        .cart-item-price {
            color: var(--accent);
            font-weight: bold;
        }

        .cart-item-size {
            font-size: 0.8rem;
            color: #666;
            margin: 0.2rem 0;
        }

        .remove-item {
            color: #999;
            cursor: pointer;
            font-size: 0.8rem;
        }

        .cart-total {
            font-weight: bold;
            margin-top: 1rem;
            text-align: right;
        }

        .checkout-btn {
            background-color: var(--accent);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 1rem;
            width: 100%;
            font-weight: bold;
            transition: var(--transition);
        }

        .checkout-btn:hover {
            background-color: #c0392b;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('https://images.unsplash.com/photo-1489987707025-afc232f7ea0f?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            height: 400px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            text-align: center;
            margin-bottom: 3rem;
        }

        .hero-content {
            max-width: 800px;
            padding: 2rem;
        }

        .hero h1 {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease 0.2s, transform 0.5s ease 0.2s;
        }

        .hero.visible h1,
        .hero.visible p {
            opacity: 1;
            transform: translateY(0);
        }

        /* Products Section */
        .products {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .section-title {
            text-align: center;
            margin-bottom: 3rem;
            font-size: 2rem;
            color: var(--dark);
            position: relative;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }

        .section-title:after {
            content: '';
            display: block;
            width: 100px;
            height: 3px;
            background-color: var(--accent);
            margin: 0.5rem auto;
        }

        .section-title.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 2rem;
        }

        .product-card {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: var(--transition);
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease, box-shadow 0.3s ease;
        }

        .product-card.visible {
            opacity: 1;
            transform: translateY(0);
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .product-img {
            width: 100%;
            height: 300px;
            object-fit: cover;
            transition: var(--transition);
        }

        .product-info {
            padding: 1.5rem;
        }

        .product-title {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            font-weight: bold;
        }

        .product-price {
            color: var(--accent);
            font-weight: bold;
            font-size: 1.2rem;
            margin-bottom: 1rem;
        }

        /* Size Selector */
        .size-selector {
            margin-bottom: 1rem;
        }

        .size-options {
            display: flex;
            gap: 5px;
            flex-wrap: wrap;
        }

        .size-option {
            border: 1px solid #ddd;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 0.8rem;
            transition: var(--transition);
        }

        .size-option:hover {
            background-color: #f0f0f0;
        }

        .size-option.selected {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        /* Quantity Selector */
        .quantity-selector {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .quantity-btn {
            width: 30px;
            height: 30px;
            background-color: #f0f0f0;
            border: none;
            font-size: 1rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
        }

        .quantity-btn:hover {
            background-color: #ddd;
        }

        .quantity-input {
            width: 50px;
            height: 30px;
            text-align: center;
            border: 1px solid #ddd;
            margin: 0 5px;
        }

        .add-to-cart {
            background-color: #FFD700;
            color:black;
            border: none;
            padding: 0.7rem 1rem;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            font-weight: bold;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .add-to-cart:hover {
            background-color: var(--secondary);
        }

        .add-to-cart.added {
            background-color: #27ae60;
        }

        .add-to-cart i {
            font-size: 1rem;
        }

        /* Footer */
        footer {
            background-color: #FFD700;
            color:black;
            text-align: center;
            padding: 2rem;
            margin-top: 3rem;
            font-weight:bold;
        }

        .footer-content {
            max-width: 800px;
            margin: 0 auto;
        }

        .social-icons {
            margin: 1rem 0;
        }

        .social-icons a {
            color: black;
            margin: 0 0.5rem;
            font-size: 1.5rem;
            transition: var(--transition);
        }

        .social-icons a:hover {
            color: var(--accent);
        }

        /* Responsive */
        @media (max-width: 768px) {
            body {
                padding-top: 150px;
            }
            
            .hero {
                height: 300px;
            }

            .hero h1 {
                font-size: 2rem;
            }

            .cart-dropdown {
                width: 300px;
            }

            .product-grid {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            }
        }

        @media (max-width: 480px) {
            body {
                padding-top: 140px;
            }
            
            header {
                padding: 1rem;
            }

            .logo {
                font-size: 1.5rem;
            }

            .hero {
                height: 250px;
            }

            .hero h1 {
                font-size: 1.8rem;
            }

            .cart-dropdown {
                width: 280px;
                right: -20px;
            }
            
            .category-nav {
                padding: 8px 0;
            }
            
            .category-btn {
                padding: 6px 12px;
                font-size: 0.8rem;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <!-- Header with Cart -->
    <header>
        <div class="header-top">
            <a href="#" class="logo" style="color:rgba(14, 22, 112, 0.945);">QOS <span style="color:rgb(210, 50, 0)">Closet</span></a>
            <div class="cart-icon" id="cartIcon">
                <i class="fas fa-shopping-cart"></i>
                <span class="cart-count" id="cartCount">0</span>
                <div class="cart-dropdown" id="cartDropdown">
                    <div id="cartItems"></div>
                    <div class="cart-total">Total: ₦<span id="cartTotal">0</span></div>
                    <button class="checkout-btn" id="checkoutBtn">Proceed to Checkout</button>
                </div>
            </div>
        </div>
        
        <!-- Category Navigation -->
        <div class="category-nav" id="categoryNav">
            <button class="category-btn active" data-category="all">All Products</button>
            <button class="category-btn" data-category="shirt">Shirts</button>
            <button class="category-btn" data-category="suit">Suits</button>
            <button class="category-btn" data-category="jeans">Jeans</button>
            <button class="category-btn" data-category="jacket">Jackets</button>
            <button class="category-btn" data-category="hoodie">Hoodies</button>
            <button class="category-btn" data-category="shoes">Sneakers</button>
            <button class="category-btn" data-category="shorts">Shorts</button>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero" id="hero">
        <div class="hero-content">
            <h1>Premium Men's Wear</h1>
            <p>Discover our exclusive collection of high-quality men's clothing</p>
        </div>
    </section>

    <!-- Products Section -->
    <section class="products">
        <h2 class="section-title" id="productsTitle" style="color:white; border-radius:33px; padding: 22px; border:none; font-weight:bold; background-image:url('QosImage.jpg');">Our Collection</h2>
        <div class="product-grid" id="productGrid">
            <!-- Product cards will be added here by JavaScript -->
        </div>
    </section>

    <!-- Footer -->
    <footer>
        <div class="footer-content">
            <h3 style="font-weight:bold; font-size:30px; font-family:Georgia, 'Times New Roman', Times, serif">QOS Closet</h3>
            <p style="font-style:italic; font-family:var(--secondary)">Premium men's wear for the modern gentleman</p>
            <div class="social-icons">
                 <a href="#"><i class="fab fa-facebook"></i></a>
                <a href="#"><i class="fab fa-instagram"></i></a>
                <a href="#"><i class="fab fa-twitter"></i></a>
            </div>
            <p>&copy; 2025 QOS Closet. All rights reserved.</p>
        </div>
    </footer>

    <script>
        // Enhanced Product Data with clear categories
        const products = [
            {
                id: 1,
                title: "Classic White Shirt",
                price: 15000,
                image: "https://images.unsplash.com/photo-1598033129183-c4f50c736f10?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "shirt",
                sizes: ["M", "L", "XL", "2XL", "3XL", "4XL"]
            },
            {
                id: 2,
                title: "Slim Fit Chinos",
                price: 18000,
                image: "https://www.uniqlo.com/jp/ja/contents/feature/masterpiece/common/img/product/item_22_kv.jpg?250116",
                category: "jeans",
                sizes: ["28", "30", "32", "34", "36", "38"]
            },
            {
                id: 3, 
                title: "Leather Jacket",
                price: 45000,
                image: "https://images.unsplash.com/photo-1551028719-00167b16eac5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "jacket",
                sizes: ["S", "M", "L", "XL", "2XL"]
            },
            {
                id: 4,
                title: "Premium Denim Jeans",
                price: 22000,
                image: "https://images.unsplash.com/photo-1541099649105-f69ad21f3246?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "jeans",
                sizes: ["28", "30", "32", "34", "36", "38"]
            },
            {
                id: 5,
                title: "Formal Business Suit",
                price: 60000,
                image: "https://i.ebayimg.com/images/g/ki4AAOSwsvlh1aUx/s-l960.webp",
                category: "suit",
                sizes: ["S", "M", "L", "XL", "2XL"]
            },
            {
                id: 6,
                title: "Casual Polo T-Shirt",
                price: 8000,
                image: "https://images.unsplash.com/photo-1527719327859-c6ce80353573?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "shirt",
                sizes: ["M", "L", "XL", "2XL", "3XL", "4XL"]
            },
            {
                id: 7,
                title: "Winter Wool Coat",
                price: 38000,
                image: "https://images.unsplash.com/photo-1591047139829-d91aecb6caea?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "jacket",
                sizes: ["S", "M", "L", "XL"]
            },
            {
                id: 8,
                title: "Sports Jacket",
                price: 28000,
                image: "https://images.unsplash.com/photo-1591047139829-d91aecb6caea?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "jacket",
                sizes: ["S", "M", "L", "XL", "2XL"]
            },
            {
                id: 9,
                title: "Designer Hoodie",
                price: 25000,
                image: "https://images.unsplash.com/photo-1620799140408-edc6dcb6d633?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "hoodie",
                sizes: ["S", "M", "L", "XL", "2XL"]
            },
            {
                id: 10,
                title: "Linen Shorts",
                price: 12000,
                image: "https://images.unsplash.com/photo-1604176354204-9268737828e4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "shorts",
                sizes: ["S", "M", "L", "XL"]
            },
            {
                id: 11,
                title: "Tailored Blazer",
                price: 42000,
                image: "https://images.unsplash.com/photo-1591047139829-d91aecb6caea?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "suit",
                sizes: ["S", "M", "L", "XL", "2XL"]
            },
            {
                id: 12,
                title: "Casual Sneakers",
                price: 32000,
                image: "https://images.unsplash.com/photo-1600269452121-4f2416e55c28?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80",
                category: "shoes",
                sizes: ["40", "41", "42", "43", "44", "45"]
            }
        ];

        // Cart Data
        let cart = [];
        let currentCategory = 'all';

        // DOM Elements
        const productGrid = document.getElementById('productGrid');
        const cartIcon = document.getElementById('cartIcon');
        const cartDropdown = document.getElementById('cartDropdown');
        const cartCount = document.getElementById('cartCount');
        const cartItems = document.getElementById('cartItems');
        const cartTotal = document.getElementById('cartTotal');
        const checkoutBtn = document.getElementById('checkoutBtn');
        const hero = document.getElementById('hero');
        const productsTitle = document.getElementById('productsTitle');
        const categoryNav = document.getElementById('categoryNav');
        const categoryButtons = document.querySelectorAll('.category-btn');

        // Initialize the page
        document.addEventListener('DOMContentLoaded', () => {
            // Load products
            renderProducts();

            // Set up event listeners
            cartIcon.addEventListener('click', toggleCart);
            checkoutBtn.addEventListener('click', checkout);
            
            // Add category filter event listeners
            categoryButtons.forEach(button => {
                button.addEventListener('click', () => {
                    // Update active button
                    categoryButtons.forEach(btn => btn.classList.remove('active'));
                    button.classList.add('active');
                    
                    // Filter products
                    currentCategory = button.dataset.category;
                    renderProducts();
                    
                    // Scroll to products section
                    document.querySelector('.products').scrollIntoView({
                        behavior: 'smooth'
                    });
                });
            });

            // Check if elements are in view
            checkIfInView();

            // Add scroll event listener for animations
            window.addEventListener('scroll', checkIfInView);
        });

        // Render products to the page based on current category
        function renderProducts() {
            productGrid.innerHTML = '';
            
            // Filter products by category
            const filteredProducts = currentCategory === 'all' 
                ? products 
                : products.filter(product => product.category === currentCategory);
            
            if (filteredProducts.length === 0) {
                productGrid.innerHTML = '<p style="grid-column:1/-1; text-align:center;">No products found in this category</p>';
                return;
            }
            
            filteredProducts.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                
                // Generate size options HTML
                const sizeOptions = product.sizes.map(size => 
                    `<div class="size-option" data-size="${size}">${size}</div>`
                ).join('');
                
                productCard.innerHTML = `
                    <img src="${product.image}" alt="${product.title}" class="product-img">
                    <div class="product-info">
                        <h3 class="product-title">${product.title}</h3>
                        <p class="product-price">₦${product.price.toLocaleString()}</p>
                        
                        <div class="size-selector">
                            <label>Size:</label>
                            <div class="size-options">
                                ${sizeOptions}
                            </div>
                        </div>
                        
                        <div class="quantity-selector">
                            <button class="quantity-btn minus" data-id="${product.id}">-</button>
                            <input type="number" class="quantity-input" value="1" min="1" data-id="${product.id}">
                            <button class="quantity-btn plus" data-id="${product.id}">+</button>
                        </div>
                        
                        <button class="add-to-cart" data-id="${product.id}">
                            <i class="fas fa-cart-plus"></i> Add to Cart
                        </button>
                    </div>
                `;
                productGrid.appendChild(productCard);

                // Add event listeners to size options
                const sizeOptionsElements = productCard.querySelectorAll('.size-option');
                sizeOptionsElements.forEach(option => {
                    option.addEventListener('click', function() {
                        // Remove selected class from all options
                        sizeOptionsElements.forEach(opt => opt.classList.remove('selected'));
                        // Add selected class to clicked option
                        this.classList.add('selected');
                    });
                });

                // Select first size by default
                if (sizeOptionsElements.length > 0) {
                    sizeOptionsElements[0].classList.add('selected');
                }

                // Add event listeners to quantity buttons
                const minusBtn = productCard.querySelector('.minus');
                const plusBtn = productCard.querySelector('.plus');
                const quantityInput = productCard.querySelector('.quantity-input');
                
                minusBtn.addEventListener('click', () => {
                    if (parseInt(quantityInput.value) > 1) {
                        quantityInput.value = parseInt(quantityInput.value) - 1;
                    }
                });
                
                plusBtn.addEventListener('click', () => {
                    quantityInput.value = parseInt(quantityInput.value) + 1;
                });

                // Add event listener to the add to cart button
                const addButton = productCard.querySelector('.add-to-cart');
                addButton.addEventListener('click', () => {
                    const selectedSize = productCard.querySelector('.size-option.selected');
                    if (!selectedSize) {
                        showCartNotification('Please select a size');
                        return;
                    }
                    
                    const quantity = parseInt(quantityInput.value);
                    const size = selectedSize.getAttribute('data-size');
                    
                    addToCart(product, size, quantity);
                    animateAddToCart(addButton);
                });
            });
            
            // Check if products are in view for animation
            setTimeout(checkIfInView, 100);
        }

        // Add product to cart with animation
        function addToCart(product, size, quantity) {
            const existingItem = cart.find(item => 
                item.id === product.id && item.size === size
            );
            
            if (existingItem) {
                existingItem.quantity += quantity;
            } else {
                cart.push({
                    ...product,
                    size: size,
                    quantity: quantity
                });
            }
            
            updateCart();
            showCartNotification(`${quantity} ${product.title} (${size}) added to cart`);
        }

        // Animate the add to cart button
        function animateAddToCart(button) {
            button.classList.add('added');
            button.innerHTML = '<i class="fas fa-check"></i> Added to Cart';
            
            setTimeout(() => {
                button.classList.remove('added');
                button.innerHTML = '<i class="fas fa-cart-plus"></i> Add to Cart';
            }, 2000);
        }

        // Update cart UI
        function updateCart() {
            // Update cart count
            const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
            cartCount.textContent = totalItems;
            
            // Update cart items
            cartItems.innerHTML = '';
            if (cart.length === 0) {
                cartItems.innerHTML = '<p>Your cart is empty</p>';
            } else {
                cart.forEach(item => {
                    const cartItem = document.createElement('div');
                    cartItem.className = 'cart-item';
                    cartItem.innerHTML = `
                        <img src="${item.image}" alt="${item.title}" class="cart-item-img">
                        <div class="cart-item-details">
                            <h4 class="cart-item-title">${item.title}</h4>
                            <p class="cart-item-price">₦${item.price.toLocaleString()} x ${item.quantity}</p>
                            <p class="cart-item-size">Size: ${item.size}</p>
                            <p class="remove-item" data-id="${item.id}" data-size="${item.size}">Remove</p>
                        </div>
                    `;
                    cartItems.appendChild(cartItem);
                });

                // Add event listeners to remove buttons
                document.querySelectorAll('.remove-item').forEach(button => {
                    button.addEventListener('click', (e) => {
                        const id = parseInt(e.target.getAttribute('data-id'));
                        const size = e.target.getAttribute('data-size');
                        removeFromCart(id, size);
                    });
                });
            }
            
            // Update total
            const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            cartTotal.textContent = total.toLocaleString();
        }

        // Remove item from cart
        function removeFromCart(id, size) {
            cart = cart.filter(item => !(item.id === id && item.size === size));
            updateCart();
            showCartNotification('Item removed');
        }

        // Toggle cart dropdown
        function toggleCart() {
            cartDropdown.classList.toggle('active');
        }

        // Close cart when clicking outside
        document.addEventListener('click', (e) => {
            if (!cartIcon.contains(e.target) && !cartDropdown.contains(e.target)) {
                cartDropdown.classList.remove('active');
            }
        });

        // Checkout function - Enhanced with image links and better formatting
        function checkout() {
            if (cart.length === 0) {
                alert('Your cart is empty!');
                return;
            }

            // Create WhatsApp message with image links
            const itemsList = cart.map(item => {
                // Shorten the image URL for better readability
                const shortImgUrl = item.image.length > 50 
                    ? item.image.substring(0, 50) + '...' 
                    : item.image;
                
                return `
${item.title} 
- Size: ${item.size} 
- Qty: ${item.quantity} 
- Price: ₦${item.price.toLocaleString()}
- Image: ${item.image}
                `.trim();
            }).join('%0A%0A');
            
            const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            
            const message = `
Hello QOS Closet!
I would like to place an order:
${itemsList}
*Order Summary:*
- Total Items: ${cart.reduce((sum, item) => sum + item.quantity, 0)}
- Total Amount: ₦${total.toLocaleString()}
Please confirm availability and provide payment details. Thank you!
            `.trim();
            
            // Open WhatsApp with the message
            window.open(` https://wa.me/2348121403802?text=${encodeURIComponent(message)}`, '_blank');
            
            // Optional: Clear cart after checkout
            // cart = [];
            // updateCart();
        }

        // Show notification when item is added to cart
        function showCartNotification(message) {
            const notification = document.createElement('div');
            notification.className = 'notification';
            notification.textContent = message;
            notification.style.position = 'fixed';
            notification.style.bottom = '20px';
            notification.style.right = '20px';
            notification.style.backgroundColor = 'var(--accent)';
            notification.style.color = 'white';
            notification.style.padding = '10px 20px';
            notification.style.borderRadius = '5px';
            notification.style.boxShadow = '0 2px 10px rgba(0,0,0,0.2)';
            notification.style.zIndex = '1000';
            notification.style.animation = 'fadeIn 0.3s';
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.animation = 'fadeOut 0.3s';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }

        // Check if elements are in view for animations
        function checkIfInView() {
            const heroPosition = hero.getBoundingClientRect();
            const productsTitlePosition = productsTitle.getBoundingClientRect();
            const productCards = document.querySelectorAll('.product-card');
            
            // Hero animation
            if (heroPosition.top < window.innerHeight - 100) {
                hero.classList.add('visible');
            }
            
            // Products title animation
            if (productsTitlePosition.top < window.innerHeight - 100) {
                productsTitle.classList.add('visible');
            }
            
            // Product cards animation
            productCards.forEach((card, index) => {
                const cardPosition = card.getBoundingClientRect();
                if (cardPosition.top < window.innerHeight - 100) {
                    setTimeout(() => {
                        card.classList.add('visible');
                    }, index * 100);
                }
            });
        }

        // Add CSS for notifications
        const style = document.createElement('style');
        style.textContent = `
            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(20px); }
                to { opacity: 1; transform: translateY(0); }
            }
            @keyframes fadeOut {
                from { opacity: 1; transform: translateY(0); }
                to { opacity: 0; transform: translateY(20px); }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>